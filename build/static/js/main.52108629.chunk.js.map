{"version":3,"sources":["components/Palette/Palette.js","components/NoteCreator/NoteCreator.js","components/NoteEditor/NoteEditor.js","components/Note/Note.js","components/NoteBook/NoteBook.js","App.js","index.js"],"names":["Palette","changeNoteColor","currentColor","colorPalette","useContext","valueContext","colorList","map","index","name","value","title","className","onClick","style","background","showTextHolder","textHolderRef","e","undefined","target","innerHTML","current","cssText","hideTextHolder","NoteCreator","useState","isOpen","setIsOpen","titleTextHolder","useRef","contentTextHolder","titleValue","contentValue","noteColor","setNoteColor","isPined","changePinStatus","notesModifier","restartNoteCreator","textContent","onFocus","onBlur","ref","contentEditable","color","trim","newNote","id","content","type","NoteEditor","data","setIsEditing","titleValueRef","contentValueRef","useEffect","closeEditor","onKeyUp","propertyName","newValue","dangerouslySetInnerHTML","__html","Note","isOverflow","setIsOverflow","isEditing","textContainerRef","phisicalNote","checkSetOverflowState","i","scrollHeight","clientHeight","firstRender","setTimeout","classList","add","fadeOut","fn","remove","visibility","newVersion","NoteBook","list","pined","filter","note","notPined","length","item","getFirstFreeId","idList","indexOf","formatText","text","replace","reduce","state","action","noteCopy","listCopy","noteIndex","findIndex","splice","createContext","App","useReducer","JSON","parse","window","localStorage","getItem","listOfNotes","notesList","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52108629.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { valueContext } from 'src/App';\r\nimport './index.scss';\r\n//TODO:  dodanie responsywnoÅ›ci\r\nfunction Palette({ changeNoteColor, currentColor = '#28292c' }) {\r\n   const { colorList } = useContext(valueContext);\r\n\r\n   const colorPalette = colorList.map(({ name, value }, index) => (\r\n      <span\r\n         title={name}\r\n         key={index}\r\n         className={`Palette__color ${value === currentColor ? 'Palette__color--current' : ''}`}\r\n         onClick={() => changeNoteColor(value)}\r\n         style={{ background: value }}\r\n      ></span>\r\n   ));\r\n   return (\r\n      <span className='Palette'>\r\n         <i className='fas fa-palette'></i>\r\n         <div className='Palette__colorContainer'>{colorPalette}</div>\r\n      </span>\r\n   );\r\n}\r\n\r\nexport default Palette;\r\n","import React, { useState, useRef, useContext } from 'react';\r\nimport './index.scss';\r\nimport { valueContext } from 'src/App';\r\nimport Palette from '../Palette/Palette';\r\n//TODO:  dodanie responsywnoÅ›ci\r\n\r\nconst showTextHolder = (textHolderRef, e) => {\r\n   if (e === undefined || e.target?.innerHTML === '') textHolderRef.current.style.cssText = 'visibility: visible';\r\n};\r\n\r\nconst hideTextHolder = (textHolderRef) => {\r\n   textHolderRef.current.style.cssText = 'visibility: hidden';\r\n};\r\n\r\nfunction NoteCreator() {\r\n   const [isOpen, setIsOpen] = useState(false);\r\n   const titleTextHolder = useRef();\r\n   const contentTextHolder = useRef();\r\n\r\n   //Value to create Note\r\n   const titleValue = useRef();\r\n   const contentValue = useRef();\r\n   const [noteColor, setNoteColor] = useState('#28292c');\r\n   const [isPined, changePinStatus] = useState(false);\r\n\r\n   const { notesModifier } = useContext(valueContext);\r\n\r\n   const setNewNote = () => {\r\n      if (titleValue.current.textContent.trim() === '' && contentValue.current.textContent.trim() === '') return 1;\r\n      let newNote = {\r\n         id: null,\r\n         title: titleValue.current.innerHTML,\r\n         content: contentValue.current.innerHTML,\r\n         color: noteColor,\r\n         isPined: isPined,\r\n      };\r\n      restartNoteCreator();\r\n      notesModifier({ type: 'setNewNote', value: newNote });\r\n   };\r\n\r\n   const changeNoteColor = (color) => {\r\n      setNoteColor(color);\r\n   };\r\n\r\n   const restartNoteCreator = () => {\r\n      setIsOpen(false);\r\n      setNoteColor('#28292c');\r\n      titleValue.current.textContent = '';\r\n      contentValue.current.textContent = '';\r\n      showTextHolder(contentTextHolder);\r\n      showTextHolder(titleTextHolder);\r\n   };\r\n\r\n   return (\r\n      <div style={{ background: noteColor }} onClick={() => (!isOpen ? setIsOpen(true) : '')} className='NoteCreator'>\r\n         <div className='NoteCreator__textConteiner'>\r\n            {isOpen && (\r\n               <div className='NoteCreator__titleContainer'>\r\n                  <div\r\n                     onFocus={() => hideTextHolder(titleTextHolder)}\r\n                     onBlur={(e) => showTextHolder(titleTextHolder, e)}\r\n                     ref={titleValue}\r\n                     contentEditable='true'\r\n                     className='NoteCreator__titleValue'\r\n                  ></div>\r\n                  <div ref={titleTextHolder} className='NoteCreator__textHolder NoteCreator__textHolder--title'>\r\n                     TytuÅ‚\r\n                  </div>\r\n                  <div\r\n                     onClick={() => changePinStatus(isPined ? false : true)}\r\n                     className={`NoteCreator__pin ${isPined ? 'NoteCreator__pin--pined' : ''}`}\r\n                  >\r\n                     <i className=' fas fa-map-pin'></i>\r\n                  </div>\r\n               </div>\r\n            )}\r\n            <div className='NoteCreator__contentContainer'>\r\n               <div\r\n                  onFocus={() => hideTextHolder(contentTextHolder)}\r\n                  onBlur={(e) => showTextHolder(contentTextHolder, e)}\r\n                  ref={contentValue}\r\n                  contentEditable='true'\r\n                  className='NoteCreator__contentValue'\r\n               ></div>\r\n               <div ref={contentTextHolder} className='NoteCreator__textHolder NoteCreator__textHolder'>\r\n                  UtwÃ³rz notatkÄ™...\r\n               </div>\r\n            </div>\r\n         </div>\r\n         {isOpen && (\r\n            <div className='NoteCreator__options'>\r\n               <div>\r\n                  <Palette changeNoteColor={changeNoteColor} currentColor={noteColor} />\r\n               </div>\r\n               <div className='NoteCreator__rigthOptions'>\r\n                  <span onClick={setNewNote} className='NoteCreator__addBtn'>\r\n                     Dodaj\r\n                  </span>\r\n                  <span onClick={restartNoteCreator} className='NoteCreator__closeBtn'>\r\n                     Zamknij\r\n                  </span>\r\n               </div>\r\n            </div>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default NoteCreator;\r\n","/* eslint-disable eqeqeq */\r\nimport React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport './index.scss';\r\nimport Palette from '../Palette/Palette';\r\nimport { valueContext } from 'src/App';\r\n//TODO: dodanie responsywnoÅ›ci\r\nfunction NoteEditor({ data, setIsEditing }) {\r\n   const titleValueRef = useRef();\r\n   const contentValueRef = useRef();\r\n\r\n   const titleTextHolder = useRef();\r\n   const contentTextHolder = useRef();\r\n\r\n   const [titleValue] = useState(data.title);\r\n   const [contentValue] = useState(data.content);\r\n   const { notesModifier } = useContext(valueContext);\r\n\r\n   const deleteNote = () => {\r\n      notesModifier({ type: 'delete', value: { id: data.id } });\r\n   };\r\n\r\n   const copyNote = () => {\r\n      notesModifier({ type: 'copy', value: { id: data.id } });\r\n   };\r\n\r\n   const showTextHolder = (textHolderRef, e) => {\r\n      if (e === undefined || e.target?.innerHTML === '') textHolderRef.current.style.cssText = 'visibility: visible';\r\n   };\r\n\r\n   const changeNoteColor = (color) => {\r\n      if (color !== data.color) {\r\n         notesModifier({ type: 'changeNoteProperties', value: { id: data.id, propertyName: 'color', newValue: color } });\r\n      }\r\n   };\r\n\r\n   const hideTextHolder = (textHolderRef) => {\r\n      textHolderRef.current.style.cssText = 'visibility: hidden';\r\n   };\r\n\r\n   const closeEditor = (e) => {\r\n      if (e.target.className === 'curtain') setIsEditing(false);\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (titleValueRef.current.innerHTML != '') {\r\n         titleTextHolder.current.style.cssText = 'visibility: hidden';\r\n      }\r\n\r\n      if (contentValueRef.current.innerHTML != '') {\r\n         contentTextHolder.current.style.cssText = 'visibility: hidden';\r\n      }\r\n   }, []);\r\n\r\n   return (\r\n      <div className='curtain' onClick={(e) => closeEditor(e)}>\r\n         <div className='NoteEditor' style={{ background: data.color }}>\r\n            <div className='NoteEditor__textContainer'>\r\n               <div className='NoteEditor__titleContainer'>\r\n                  <div\r\n                     onFocus={() => hideTextHolder(titleTextHolder)}\r\n                     onBlur={(e) => showTextHolder(titleTextHolder, e)}\r\n                     ref={titleValueRef}\r\n                     contentEditable='true'\r\n                     className='NoteEditor__titleValue'\r\n                     onKeyUp={(e) =>\r\n                        notesModifier({\r\n                           type: 'changeNoteProperties',\r\n                           value: { id: data.id, propertyName: 'title', newValue: e.target.innerHTML },\r\n                        })\r\n                     }\r\n                     dangerouslySetInnerHTML={{ __html: titleValue && titleValue }}\r\n                  ></div>\r\n                  <div ref={titleTextHolder} className='NoteEditor__textHolder NoteEditor__textHolder--title'>\r\n                     TytuÅ‚\r\n                  </div>\r\n                  <div className={`NoteEditor__pin ${data.isPined && 'NoteEditor__pin--pined'}`}>\r\n                     <i\r\n                        onClick={() =>\r\n                           notesModifier({\r\n                              type: 'changePinStatus',\r\n                              value: { id: data.id },\r\n                           })\r\n                        }\r\n                        className=' fas fa-map-pin'\r\n                     ></i>\r\n                  </div>\r\n               </div>\r\n\r\n               <div className='NoteEditor__contentContainer'>\r\n                  <div\r\n                     onFocus={() => hideTextHolder(contentTextHolder)}\r\n                     onBlur={(e) => showTextHolder(contentTextHolder, e)}\r\n                     ref={contentValueRef}\r\n                     contentEditable='true'\r\n                     onKeyUp={(e) =>\r\n                        notesModifier({\r\n                           type: 'changeNoteProperties',\r\n                           value: { id: data.id, propertyName: 'content', newValue: e.target.innerHTML },\r\n                        })\r\n                     }\r\n                     className='NoteEditor__contentValue'\r\n                     dangerouslySetInnerHTML={{ __html: contentValue }} //  ? contentValue : '<br />'\r\n                  ></div>\r\n                  <div ref={contentTextHolder} className='NoteEditor__textHolder NoteEditor__textHolder--content'>\r\n                     UtwÃ³rz notatkÄ™...\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div className='NoteEditor__options'>\r\n               <div>\r\n                  <i title='usuÅ„' onClick={deleteNote} className='NoteEditor__option fas fa-trash'></i>\r\n                  <i title='kopiuj' onClick={copyNote} className='NoteEditor__option fas fa-copy'></i>\r\n                  <Palette changeNoteColor={changeNoteColor} currentColor={data.color} />\r\n               </div>\r\n               <div className='NoteEditor__rigthOptions'>\r\n                  <span onClick={() => setIsEditing(false)} className='NoteEditor__closeBtn'>\r\n                     Zamknij\r\n                  </span>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default NoteEditor;\r\n","import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport './index.scss';\r\nimport { valueContext } from 'src/App';\r\nimport Palette from 'src/components/Palette/Palette';\r\nimport NoteEditor from 'src/components/NoteEditor/NoteEditor';\r\n\r\n//TODO:  dodanie responsywnoÅ›ci\r\nfunction Note({ data }) {\r\n   const { notesModifier } = useContext(valueContext);\r\n   const [isOverflow, setIsOverflow] = useState(false);\r\n   const [isEditing, setIsEditing] = useState(false);\r\n   const textContainerRef = useRef();\r\n   const phisicalNote = useRef();\r\n\r\n   const checkSetOverflowState = () => {\r\n      let i = textContainerRef.current.scrollHeight - textContainerRef.current.clientHeight;\r\n      i > 5 ? setIsOverflow(true) : setIsOverflow(false);\r\n   };\r\n\r\n   const firstRender = useRef(false);\r\n   useEffect(() => {\r\n      // chack note overflow and format note\r\n      if (firstRender.current && !isEditing) {\r\n         checkSetOverflowState();\r\n         notesModifier({ type: 'formatNote', value: { id: data.id } });\r\n      }\r\n      firstRender.current = true;\r\n   }, [isEditing, notesModifier, data.id]);\r\n\r\n   useEffect(() => {\r\n      setIsEditing(false);\r\n      setTimeout(checkSetOverflowState, 500);\r\n      notesModifier({ type: 'formatNote', value: { id: data.id } });\r\n      //fadeIn\r\n      phisicalNote.current.classList.add('noteFadeIn');\r\n   }, [notesModifier, data.id]);\r\n\r\n   const changeNoteColor = (color) => {\r\n      if (color !== data.color) {\r\n         data.color = color;\r\n         notesModifier({\r\n            type: 'edit',\r\n            value: { id: data.id, newVersion: data },\r\n         });\r\n      }\r\n   };\r\n\r\n   const fadeOut = (fn) => {\r\n      phisicalNote.current.classList.remove('noteFadeIn');\r\n      phisicalNote.current.classList.add('noteFadeOut');\r\n      setTimeout(fn, 500);\r\n   };\r\n\r\n   const changePinStatus = () => {\r\n      fadeOut(() =>\r\n         notesModifier({\r\n            type: 'changePinStatus',\r\n            value: { id: data.id },\r\n         })\r\n      );\r\n   };\r\n\r\n   const deleteNote = () => {\r\n      fadeOut(() => notesModifier({ type: 'delete', value: { id: data.id } }));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <div\r\n            style={{ background: data.color, visibility: isEditing ? 'hidden' : 'visible' }}\r\n            ref={phisicalNote}\r\n            className='Note'\r\n         >\r\n            <div ref={textContainerRef} className='Note__textContainer'>\r\n               <header className='Note__title'>\r\n                  <div className='Note__titleValue'>\r\n                     <div onClick={changePinStatus} className={`Note__pinIcon ${data.isPined ? 'Note__pinIcon--pined' : ''}`}>\r\n                        <i className='fas fa-map-pin'></i>\r\n                     </div>\r\n                     <div\r\n                        dangerouslySetInnerHTML={{ __html: data.title ? data.title : '<br />' }}\r\n                        onClick={() => setIsEditing(true)}\r\n                     ></div>\r\n                  </div>\r\n               </header>\r\n\r\n               <div\r\n                  onClick={() => setIsEditing(true)}\r\n                  className='Note__content'\r\n                  dangerouslySetInnerHTML={{ __html: data.content ? data.content : '<br />' }}\r\n               ></div>\r\n            </div>\r\n            {isOverflow && <div className='Note__continuationDots'>...</div>}\r\n            <div className='Note__options'>\r\n               <i title='usuÅ„' onClick={deleteNote} className='fas fa-trash'></i>\r\n               <i\r\n                  title='kopiuj'\r\n                  onClick={() => notesModifier({ type: 'copy', value: { id: data.id } })}\r\n                  className='fas fa-copy'\r\n               ></i>\r\n               <Palette changeNoteColor={changeNoteColor} currentColor={data.color} />\r\n            </div>\r\n         </div>\r\n         {isEditing && <NoteEditor data={data} setIsEditing={setIsEditing} />}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport NoteCreator from '../NoteCreator/NoteCreator';\r\nimport Note from '../Note/Note';\r\nimport './index.scss';\r\n\r\n//TODO: dodanie responsywnoÅ›ci\r\nfunction NoteBook({ list }) {\r\n   const pined = list.filter((note) => {\r\n      return note.isPined === true;\r\n   });\r\n\r\n   const notPined = list.filter((note) => {\r\n      return note.isPined === false;\r\n   });\r\n\r\n   return (\r\n      <div className='NoteBook'>\r\n         <NoteCreator />\r\n         <div className='NoteBook__main'>\r\n            {pined.length !== 0 && <span className='NoteBook__category'>PrzypiÄ™te</span>}\r\n            <div className='NoteBook__noteDisplay'>\r\n               {pined.map((item) => (\r\n                  <Note key={item.id} data={item} />\r\n               ))}\r\n            </div>\r\n            {notPined.length !== 0 && <span className='NoteBook__category'>Inne</span>}\r\n            <div className='NoteBook__noteDisplay'>\r\n               {notPined.map((item) => (\r\n                  <Note key={item.id} data={item} />\r\n               ))}\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default NoteBook;\r\n","import './App.scss';\nimport React, { useReducer, createContext, useEffect, useRef } from 'react';\nimport NoteBook from './components/NoteBook/NoteBook';\n\nconst colorList = [\n   {\n      name: 'Czarny',\n      value: '#28292c',\n   },\n   {\n      name: 'Czerwony',\n      value: '#5C2B29',\n   },\n   {\n      name: 'PomaraÅ„cz',\n      value: '#614A19',\n   },\n   {\n      name: 'Å»Ã³Å‚ty',\n      value: '#635D19',\n   },\n   {\n      name: 'Zielony',\n      value: '#345920',\n   },\n   {\n      name: 'Morski',\n      value: '#16504B',\n   },\n   {\n      name: 'Niebieski',\n      value: '#2D555E',\n   },\n   {\n      name: 'Ciemny Niebieski',\n      value: '#1E3A5F',\n   },\n   {\n      name: 'Fiolet',\n      value: '#42275E',\n   },\n   {\n      name: 'RÃ³Å¼',\n      value: '#5B2245',\n   },\n   {\n      name: 'BrÄ…z',\n      value: '#442F19',\n   },\n   {\n      name: 'Szary',\n      value: '#3C3F43',\n   },\n];\n\nconst getFirstFreeId = (list) => {\n   const idList = list.map((item) => item.id);\n   for (let i = 1; true; i++) {\n      if (idList.indexOf(i) === -1) return i;\n   }\n};\n\nconst formatText = (text) => text.replace(/^(<div> *<br><\\/div>)*|(<div> *<br><\\/div>)*$/gm, '');\n\nconst getIndex = (id, arr) => arr.findIndex((item) => item.id === id);\n\nconst reduce = (state, action) => {\n   const listCopy = [...state];\n   let noteIndex = action.type !== 'setNewNote' && getIndex(action.value.id, state);\n   let noteCopy;\n\n   switch (action.type) {\n      case 'formatNote':\n         listCopy[noteIndex].title = formatText(listCopy[noteIndex].title);\n         listCopy[noteIndex].content = formatText(listCopy[noteIndex].content);\n\n         return listCopy;\n      case 'changeNoteProperties':\n         listCopy[noteIndex][action.value.propertyName] = action.value.newValue;\n         return listCopy;\n\n      case 'setNewNote':\n         let newNote = action.value;\n         newNote.id = getFirstFreeId(state);\n         return [...state, newNote];\n\n      case 'edit':\n         listCopy[noteIndex] = action.value.newVersion;\n         return listCopy;\n\n      case 'changePinStatus':\n         noteCopy = { ...listCopy[noteIndex] };\n         noteCopy.isPined = !noteCopy.isPined;\n         listCopy.splice(noteIndex, 1);\n         return [noteCopy, ...listCopy];\n\n      case 'delete':\n         listCopy.splice(noteIndex, 1);\n         return listCopy;\n\n      case 'copy':\n         noteCopy = { ...state[noteIndex] };\n         noteCopy.id = getFirstFreeId(state);\n         listCopy.splice(noteIndex + 1, 0, noteCopy);\n         return listCopy;\n\n      default:\n         return state;\n   }\n};\n\nconst saveNotesInLocalStorage = (notesList) => {\n   window.localStorage.setItem('notes', JSON.stringify(notesList));\n};\n\nconst getArrayOfNotes = () => {\n   return JSON.parse(window.localStorage.getItem('notes'));\n};\nexport const valueContext = createContext();\n\n//TODO:  dodanie responsywnoÅ›ci\nfunction App() {\n   const [listOfNotes, notesModifier] = useReducer(reduce, getArrayOfNotes() || []);\n\n   let firstRender = useRef(true);\n   useEffect(() => {\n      if (firstRender.current === false) {\n         saveNotesInLocalStorage(listOfNotes);\n      }\n      firstRender.current = false;\n   }, [listOfNotes]);\n\n   return (\n      <div className='App'>\n         <valueContext.Provider\n            value={{\n               colorList: colorList,\n               notesModifier: notesModifier,\n            }}\n         >\n            <div className='App__banner'>\n               <header className='App__title'>NOTATNIK</header>\n            </div>\n            <div className='App__line'></div>\n\n            <NoteBook list={listOfNotes} />\n         </valueContext.Provider>\n      </div>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}